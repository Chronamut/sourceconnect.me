- content_for(:title) do
  - @post.title
.row.page-header
  %h1.postheading
    = @post.title
    %small
      Posted by #{@post.user.username} #{time_ago_in_words(@post.created_at)} ago
#post-body.row
  %a.pull-left{:src => user_path(@post.user)}
    %img.avatar{:src => user_avatar_url(@post.user, 'small')}
  = raw @post.body


- if user_signed_in?
  %a.btn{:href => "#comment", :role => 'button', :id => 'commentoggle'}
    Add a comment
- if user_signed_in? && can_edit(@post.user,current_user)
  = link_to 'Edit', edit_post_path(@post), :class => 'btn'
  = link_to 'Delete', @post, method: :delete, :class => 'btn', data: { confirm: 'Are you sure you want to delete this? You may never get it back.' }
= link_to 'Back', posts_path, :class => 'btn'

%h3.glow Comments
%ul.media-list.row
  - @post.comments.each do |f|
    %ul
      %li.media.combox.centered
        %a.pull-left{:href => user_path(f.user)}
          %img.media-object.avatar{:src => user_avatar_url(f.user,'thumb')}
        .pull-right.comment_user
          .row
            %small
              By #{link_to f.user.username, user_path(f.user)}
          .row
            %small
              #{time_ago_in_words(f.created_at)} ago
          - if can_edit(f.user, current_user)
            .row
              %small
                #{link_to 'Edit', comment_editor_path(@post,f)} | #{link_to 'Delete', comment_rm_path(@post,f), method: :delete }
        .media-body.comment
          = raw f.body

#comment.dform1.centered
  %h2 Add a comment
  =simple_form_for([@post,@post.comments.build]) do |f|
    .control-group
      .field
        = f.text_area :body, :class => 'wysihtml5 span6'
      .actions
        = f.submit 'Save', :class => 'btn'

:javascript
  $('#comment').hide();
  $('#commentoggle').click(function(){
    $('#comment').show();
  });
  $('.wysihtml5').each(function(i, elem) {
    $(elem).wysihtml5({
      "color": true
    });
  });